[project]
name = "pytest_cs"
version = "0.7.23"
license = "MIT"
description = "Pytest fixtures for crowdsec"
readme = "README.md"
authors = [
    { email = "marco@crowdsec.net" }
]
requires-python = ">=3.12"
dependencies = [
    "docker>=7.1.0",
    "psutil>=6.1.1",
    "pytest>=8.3.4",
    "pytest-datadir>=1.5.0",
    "pytest-dotenv>=0.5.2",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "trustme>=1.2.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "basedpyright>=1.25.0",
    "ruff>=0.9.3",
    "types-docker>=7.1.0.20241229",
    "types-psutil>=6.1.0.20241221",
    "types-pyyaml>=6.0.12.20241230",
    "types-requests>=2.32.0.20241016",
]

[project.entry-points.'pytest11']
cs = "pytest_cs"

[tool.ruff]

line-length = 120

[tool.ruff.lint.per-file-ignores]
"src/pytest_cs/plugin.py" = [
    "T201",     # `print` found
]

[tool.ruff.lint]
select = [
  "ALL"
]

ignore = [
    "ANN",      # Missing type annotations
    "COM",      # flake8-commas
    "D",        # pydocstyle
    "ERA",      # eradicate
    "FIX",      # flake8-fixme
    "TD",       # flake8-todos

    "E501",     # line too long
                # ^ does not ignore comments that can't be moved to their own line, line noqa, pyright
                #   so we take care of line lenghts only with "ruff format"
    "N801",     # Class name `log_waiters` should use CapWords convention
    "PLW0603",  # Using the global statement to update `...` is discouraged
    "S101",     # Use of 'assert' detected
    "S603",     # `subprocess` call: check for execution of untrusted input
    "S607",     # Starting a process with a partial executable path
]

[tool.basedpyright]
reportUnknownArgumentType = "none"
reportUnknownParameterType = "none"
reportMissingParameterType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportAny = "none"
