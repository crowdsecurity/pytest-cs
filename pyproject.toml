[project]
name = "pytest_cs"
version = "0.7.20"
license = "MIT"
description = "Pytest fixtures for crowdsec"
readme = "README.md"
authors = [
    { email = "marco@crowdsec.net" }
]
requires-python = ">=3.12"
dependencies = [
    "docker>=7.1.0",
    "psutil>=6.1.1",
    "pytest>=8.3.4",
    "pytest-datadir>=1.5.0",
    "pytest-dotenv>=0.5.2",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "trustme>=1.2.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "basedpyright>=1.25.0",
    "ruff>=0.9.3",
    "types-docker>=7.1.0.20241229",
    "types-psutil>=6.1.0.20241221",
    "types-pyyaml>=6.0.12.20241230",
    "types-requests>=2.32.0.20241016",
]

[project.entry-points.'pytest11']
cs = "pytest_cs"

[tool.ruff]

line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "C90", # macabe
]

ignore = [
    "B008", # do not perform function calls in argument defaults
]

[tool.basedpyright]
reportUnknownArgumentType = "none"
reportUnknownParameterType = "none"
reportMissingParameterType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportUnannotatedClassAttribute = "none"
reportCallInDefaultInitializer = "none"
reportImplicitOverride = "none"
reportUnusedCallResult = "none"
reportUnusedParameter = "none"
reportUnsupportedDunderAll = "none"
reportAny = "none"
